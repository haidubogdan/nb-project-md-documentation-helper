// Generated from MdAntlrLexer.g4 by ANTLR 4.13.0

  package org.antlr.parser.markdown;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue"})
public class MdAntlrLexer extends LexerAdaptor {
	static { RuntimeMetaData.checkVersion("4.13.0", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		TOKEN_REF=1, RULE_REF=2, LEXER_CHAR_SET=3, LI_PRE_WS=4, BLOCK_CODE=5, 
		TriBacktip=6, HTML=7, NL=8, WS=9, HEADER=10, BREAK_LINE=11, BOLD=12, ITALIC=13, 
		CODE=14, RAW_TEXT=15;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"LI_PRE_WS", "BLOCK_CODE", "TriBacktip", "HTML", "HtmlElement", "NL", 
			"WS", "HEADER", "Header", "BREAK_LINE", "LiPrefix", "BOLD", "Bold", "DbAsterix", 
			"ITALIC", "Italic", "SgAsterix", "Backtip", "BacktickCode", "CODE", "RAW_TEXT"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, null, null, null, null, null, "'```'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "TOKEN_REF", "RULE_REF", "LEXER_CHAR_SET", "LI_PRE_WS", "BLOCK_CODE", 
			"TriBacktip", "HTML", "NL", "WS", "HEADER", "BREAK_LINE", "BOLD", "ITALIC", 
			"CODE", "RAW_TEXT"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public MdAntlrLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "MdAntlrLexer.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public boolean sempred(RuleContext _localctx, int ruleIndex, int predIndex) {
		switch (ruleIndex) {
		case 0:
			return LI_PRE_WS_sempred((RuleContext)_localctx, predIndex);
		}
		return true;
	}
	private boolean LI_PRE_WS_sempred(RuleContext _localctx, int predIndex) {
		switch (predIndex) {
		case 0:
			return this.IsNewLineOrStart();
		}
		return true;
	}

	public static final String _serializedATN =
		"\u0004\u0000\u000f\u00df\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002"+
		"\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002"+
		"\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002"+
		"\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002"+
		"\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e"+
		"\u0002\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011"+
		"\u0002\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014"+
		"\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0005\u0001"+
		"1\b\u0001\n\u0001\f\u00014\t\u0001\u0001\u0001\u0001\u0001\u0003\u0001"+
		"8\b\u0001\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0003"+
		"\u0001\u0003\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004"+
		"\u0001\u0004\u0005\u0004F\b\u0004\n\u0004\f\u0004I\t\u0004\u0001\u0004"+
		"\u0001\u0004\u0001\u0004\u0001\u0004\u0003\u0004O\b\u0004\u0001\u0004"+
		"\u0001\u0004\u0005\u0004S\b\u0004\n\u0004\f\u0004V\t\u0004\u0001\u0004"+
		"\u0001\u0004\u0001\u0004\u0003\u0004[\b\u0004\u0001\u0004\u0001\u0004"+
		"\u0001\u0004\u0001\u0004\u0005\u0004a\b\u0004\n\u0004\f\u0004d\t\u0004"+
		"\u0001\u0004\u0003\u0004g\b\u0004\u0003\u0004i\b\u0004\u0001\u0005\u0001"+
		"\u0005\u0001\u0006\u0004\u0006n\b\u0006\u000b\u0006\f\u0006o\u0001\u0007"+
		"\u0001\u0007\u0001\b\u0004\bu\b\b\u000b\b\f\bv\u0001\b\u0001\b\u0001\b"+
		"\u0005\b|\b\b\n\b\f\b\u007f\t\b\u0001\t\u0001\t\u0001\t\u0004\t\u0084"+
		"\b\t\u000b\t\f\t\u0085\u0001\t\u0005\t\u0089\b\t\n\t\f\t\u008c\t\t\u0001"+
		"\t\u0001\t\u0001\n\u0005\n\u0091\b\n\n\n\f\n\u0094\t\n\u0001\n\u0001\n"+
		"\u0001\n\u0005\n\u0099\b\n\n\n\f\n\u009c\t\n\u0001\n\u0001\n\u0001\n\u0005"+
		"\n\u00a1\b\n\n\n\f\n\u00a4\t\n\u0001\n\u0004\n\u00a7\b\n\u000b\n\f\n\u00a8"+
		"\u0001\n\u0001\n\u0003\n\u00ad\b\n\u0001\u000b\u0001\u000b\u0001\f\u0001"+
		"\f\u0005\f\u00b3\b\f\n\f\f\f\u00b6\t\f\u0001\f\u0001\f\u0003\f\u00ba\b"+
		"\f\u0001\r\u0001\r\u0001\r\u0001\u000e\u0001\u000e\u0001\u000f\u0001\u000f"+
		"\u0005\u000f\u00c3\b\u000f\n\u000f\f\u000f\u00c6\t\u000f\u0001\u000f\u0001"+
		"\u000f\u0003\u000f\u00ca\b\u000f\u0001\u0010\u0001\u0010\u0001\u0011\u0001"+
		"\u0011\u0001\u0012\u0001\u0012\u0001\u0012\u0005\u0012\u00d3\b\u0012\n"+
		"\u0012\f\u0012\u00d6\t\u0012\u0001\u0012\u0001\u0012\u0001\u0013\u0001"+
		"\u0013\u0001\u0014\u0001\u0014\u0001\u0014\u0001\u0014\u00062GTb\u00b4"+
		"\u00c4\u0000\u0015\u0001\u0004\u0003\u0005\u0005\u0006\u0007\u0007\t\u0000"+
		"\u000b\b\r\t\u000f\n\u0011\u0000\u0013\u000b\u0015\u0000\u0017\f\u0019"+
		"\u0000\u001b\u0000\u001d\r\u001f\u0000!\u0000#\u0000%\u0000\'\u000e)\u000f"+
		"\u0001\u0000\u0006\u0001\u0001>>\u0002\u0000\n\n\r\r\u0002\u0000\t\t "+
		" \u0001\u0000  \u0001\u0000--\u0001\u000009\u00ef\u0000\u0001\u0001\u0000"+
		"\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0000\u0000\u0005\u0001\u0000"+
		"\u0000\u0000\u0000\u0007\u0001\u0000\u0000\u0000\u0000\u000b\u0001\u0000"+
		"\u0000\u0000\u0000\r\u0001\u0000\u0000\u0000\u0000\u000f\u0001\u0000\u0000"+
		"\u0000\u0000\u0013\u0001\u0000\u0000\u0000\u0000\u0017\u0001\u0000\u0000"+
		"\u0000\u0000\u001d\u0001\u0000\u0000\u0000\u0000\'\u0001\u0000\u0000\u0000"+
		"\u0000)\u0001\u0000\u0000\u0000\u0001+\u0001\u0000\u0000\u0000\u0003."+
		"\u0001\u0000\u0000\u0000\u00059\u0001\u0000\u0000\u0000\u0007=\u0001\u0000"+
		"\u0000\u0000\th\u0001\u0000\u0000\u0000\u000bj\u0001\u0000\u0000\u0000"+
		"\rm\u0001\u0000\u0000\u0000\u000fq\u0001\u0000\u0000\u0000\u0011t\u0001"+
		"\u0000\u0000\u0000\u0013\u0083\u0001\u0000\u0000\u0000\u0015\u00ac\u0001"+
		"\u0000\u0000\u0000\u0017\u00ae\u0001\u0000\u0000\u0000\u0019\u00b0\u0001"+
		"\u0000\u0000\u0000\u001b\u00bb\u0001\u0000\u0000\u0000\u001d\u00be\u0001"+
		"\u0000\u0000\u0000\u001f\u00c0\u0001\u0000\u0000\u0000!\u00cb\u0001\u0000"+
		"\u0000\u0000#\u00cd\u0001\u0000\u0000\u0000%\u00cf\u0001\u0000\u0000\u0000"+
		"\'\u00d9\u0001\u0000\u0000\u0000)\u00db\u0001\u0000\u0000\u0000+,\u0004"+
		"\u0000\u0000\u0000,-\u0003\u0015\n\u0000-\u0002\u0001\u0000\u0000\u0000"+
		".2\u0003\u0005\u0002\u0000/1\t\u0000\u0000\u00000/\u0001\u0000\u0000\u0000"+
		"14\u0001\u0000\u0000\u000023\u0001\u0000\u0000\u000020\u0001\u0000\u0000"+
		"\u000037\u0001\u0000\u0000\u000042\u0001\u0000\u0000\u000058\u0003\u0005"+
		"\u0002\u000068\u0005\u0000\u0000\u000175\u0001\u0000\u0000\u000076\u0001"+
		"\u0000\u0000\u00008\u0004\u0001\u0000\u0000\u00009:\u0005`\u0000\u0000"+
		":;\u0005`\u0000\u0000;<\u0005`\u0000\u0000<\u0006\u0001\u0000\u0000\u0000"+
		"=>\u0003\t\u0004\u0000>\b\u0001\u0000\u0000\u0000?@\u0005<\u0000\u0000"+
		"@A\u0005!\u0000\u0000AB\u0005-\u0000\u0000BC\u0005-\u0000\u0000CG\u0001"+
		"\u0000\u0000\u0000DF\t\u0000\u0000\u0000ED\u0001\u0000\u0000\u0000FI\u0001"+
		"\u0000\u0000\u0000GH\u0001\u0000\u0000\u0000GE\u0001\u0000\u0000\u0000"+
		"HN\u0001\u0000\u0000\u0000IG\u0001\u0000\u0000\u0000JK\u0005-\u0000\u0000"+
		"KL\u0005-\u0000\u0000LO\u0005>\u0000\u0000MO\u0005\u0000\u0000\u0001N"+
		"J\u0001\u0000\u0000\u0000NM\u0001\u0000\u0000\u0000Oi\u0001\u0000\u0000"+
		"\u0000PT\u0005<\u0000\u0000QS\t\u0000\u0000\u0000RQ\u0001\u0000\u0000"+
		"\u0000SV\u0001\u0000\u0000\u0000TU\u0001\u0000\u0000\u0000TR\u0001\u0000"+
		"\u0000\u0000UZ\u0001\u0000\u0000\u0000VT\u0001\u0000\u0000\u0000WX\u0005"+
		"/\u0000\u0000X[\u0005>\u0000\u0000Y[\u0007\u0000\u0000\u0000ZW\u0001\u0000"+
		"\u0000\u0000ZY\u0001\u0000\u0000\u0000[i\u0001\u0000\u0000\u0000\\]\u0005"+
		"<\u0000\u0000]^\u0005/\u0000\u0000^b\u0001\u0000\u0000\u0000_a\t\u0000"+
		"\u0000\u0000`_\u0001\u0000\u0000\u0000ad\u0001\u0000\u0000\u0000bc\u0001"+
		"\u0000\u0000\u0000b`\u0001\u0000\u0000\u0000cf\u0001\u0000\u0000\u0000"+
		"db\u0001\u0000\u0000\u0000eg\u0007\u0000\u0000\u0000fe\u0001\u0000\u0000"+
		"\u0000gi\u0001\u0000\u0000\u0000h?\u0001\u0000\u0000\u0000hP\u0001\u0000"+
		"\u0000\u0000h\\\u0001\u0000\u0000\u0000i\n\u0001\u0000\u0000\u0000jk\u0007"+
		"\u0001\u0000\u0000k\f\u0001\u0000\u0000\u0000ln\u0007\u0002\u0000\u0000"+
		"ml\u0001\u0000\u0000\u0000no\u0001\u0000\u0000\u0000om\u0001\u0000\u0000"+
		"\u0000op\u0001\u0000\u0000\u0000p\u000e\u0001\u0000\u0000\u0000qr\u0003"+
		"\u0011\b\u0000r\u0010\u0001\u0000\u0000\u0000su\u0005#\u0000\u0000ts\u0001"+
		"\u0000\u0000\u0000uv\u0001\u0000\u0000\u0000vt\u0001\u0000\u0000\u0000"+
		"vw\u0001\u0000\u0000\u0000wx\u0001\u0000\u0000\u0000xy\u0007\u0003\u0000"+
		"\u0000y}\u0001\u0000\u0000\u0000z|\b\u0001\u0000\u0000{z\u0001\u0000\u0000"+
		"\u0000|\u007f\u0001\u0000\u0000\u0000}{\u0001\u0000\u0000\u0000}~\u0001"+
		"\u0000\u0000\u0000~\u0012\u0001\u0000\u0000\u0000\u007f}\u0001\u0000\u0000"+
		"\u0000\u0080\u0081\u0005-\u0000\u0000\u0081\u0082\u0005-\u0000\u0000\u0082"+
		"\u0084\u0005-\u0000\u0000\u0083\u0080\u0001\u0000\u0000\u0000\u0084\u0085"+
		"\u0001\u0000\u0000\u0000\u0085\u0083\u0001\u0000\u0000\u0000\u0085\u0086"+
		"\u0001\u0000\u0000\u0000\u0086\u008a\u0001\u0000\u0000\u0000\u0087\u0089"+
		"\u0007\u0004\u0000\u0000\u0088\u0087\u0001\u0000\u0000\u0000\u0089\u008c"+
		"\u0001\u0000\u0000\u0000\u008a\u0088\u0001\u0000\u0000\u0000\u008a\u008b"+
		"\u0001\u0000\u0000\u0000\u008b\u008d\u0001\u0000\u0000\u0000\u008c\u008a"+
		"\u0001\u0000\u0000\u0000\u008d\u008e\b\u0001\u0000\u0000\u008e\u0014\u0001"+
		"\u0000\u0000\u0000\u008f\u0091\u0007\u0002\u0000\u0000\u0090\u008f\u0001"+
		"\u0000\u0000\u0000\u0091\u0094\u0001\u0000\u0000\u0000\u0092\u0090\u0001"+
		"\u0000\u0000\u0000\u0092\u0093\u0001\u0000\u0000\u0000\u0093\u0095\u0001"+
		"\u0000\u0000\u0000\u0094\u0092\u0001\u0000\u0000\u0000\u0095\u0096\u0005"+
		"-\u0000\u0000\u0096\u00ad\u0005 \u0000\u0000\u0097\u0099\u0007\u0002\u0000"+
		"\u0000\u0098\u0097\u0001\u0000\u0000\u0000\u0099\u009c\u0001\u0000\u0000"+
		"\u0000\u009a\u0098\u0001\u0000\u0000\u0000\u009a\u009b\u0001\u0000\u0000"+
		"\u0000\u009b\u009d\u0001\u0000\u0000\u0000\u009c\u009a\u0001\u0000\u0000"+
		"\u0000\u009d\u009e\u0005*\u0000\u0000\u009e\u00ad\u0005 \u0000\u0000\u009f"+
		"\u00a1\u0007\u0002\u0000\u0000\u00a0\u009f\u0001\u0000\u0000\u0000\u00a1"+
		"\u00a4\u0001\u0000\u0000\u0000\u00a2\u00a0\u0001\u0000\u0000\u0000\u00a2"+
		"\u00a3\u0001\u0000\u0000\u0000\u00a3\u00a6\u0001\u0000\u0000\u0000\u00a4"+
		"\u00a2\u0001\u0000\u0000\u0000\u00a5\u00a7\u0007\u0005\u0000\u0000\u00a6"+
		"\u00a5\u0001\u0000\u0000\u0000\u00a7\u00a8\u0001\u0000\u0000\u0000\u00a8"+
		"\u00a6\u0001\u0000\u0000\u0000\u00a8\u00a9\u0001\u0000\u0000\u0000\u00a9"+
		"\u00aa\u0001\u0000\u0000\u0000\u00aa\u00ab\u0005.\u0000\u0000\u00ab\u00ad"+
		"\u0005 \u0000\u0000\u00ac\u0092\u0001\u0000\u0000\u0000\u00ac\u009a\u0001"+
		"\u0000\u0000\u0000\u00ac\u00a2\u0001\u0000\u0000\u0000\u00ad\u0016\u0001"+
		"\u0000\u0000\u0000\u00ae\u00af\u0003\u0019\f\u0000\u00af\u0018\u0001\u0000"+
		"\u0000\u0000\u00b0\u00b4\u0003\u001b\r\u0000\u00b1\u00b3\t\u0000\u0000"+
		"\u0000\u00b2\u00b1\u0001\u0000\u0000\u0000\u00b3\u00b6\u0001\u0000\u0000"+
		"\u0000\u00b4\u00b5\u0001\u0000\u0000\u0000\u00b4\u00b2\u0001\u0000\u0000"+
		"\u0000\u00b5\u00b9\u0001\u0000\u0000\u0000\u00b6\u00b4\u0001\u0000\u0000"+
		"\u0000\u00b7\u00ba\u0003\u001b\r\u0000\u00b8\u00ba\u0005\u0000\u0000\u0001"+
		"\u00b9\u00b7\u0001\u0000\u0000\u0000\u00b9\u00b8\u0001\u0000\u0000\u0000"+
		"\u00ba\u001a\u0001\u0000\u0000\u0000\u00bb\u00bc\u0005*\u0000\u0000\u00bc"+
		"\u00bd\u0005*\u0000\u0000\u00bd\u001c\u0001\u0000\u0000\u0000\u00be\u00bf"+
		"\u0003\u001f\u000f\u0000\u00bf\u001e\u0001\u0000\u0000\u0000\u00c0\u00c4"+
		"\u0003!\u0010\u0000\u00c1\u00c3\t\u0000\u0000\u0000\u00c2\u00c1\u0001"+
		"\u0000\u0000\u0000\u00c3\u00c6\u0001\u0000\u0000\u0000\u00c4\u00c5\u0001"+
		"\u0000\u0000\u0000\u00c4\u00c2\u0001\u0000\u0000\u0000\u00c5\u00c9\u0001"+
		"\u0000\u0000\u0000\u00c6\u00c4\u0001\u0000\u0000\u0000\u00c7\u00ca\u0003"+
		"!\u0010\u0000\u00c8\u00ca\u0005\u0000\u0000\u0001\u00c9\u00c7\u0001\u0000"+
		"\u0000\u0000\u00c9\u00c8\u0001\u0000\u0000\u0000\u00ca \u0001\u0000\u0000"+
		"\u0000\u00cb\u00cc\u0005*\u0000\u0000\u00cc\"\u0001\u0000\u0000\u0000"+
		"\u00cd\u00ce\u0005`\u0000\u0000\u00ce$\u0001\u0000\u0000\u0000\u00cf\u00d4"+
		"\u0003#\u0011\u0000\u00d0\u00d3\u0003#\u0011\u0000\u00d1\u00d3\b\u0001"+
		"\u0000\u0000\u00d2\u00d0\u0001\u0000\u0000\u0000\u00d2\u00d1\u0001\u0000"+
		"\u0000\u0000\u00d3\u00d6\u0001\u0000\u0000\u0000\u00d4\u00d2\u0001\u0000"+
		"\u0000\u0000\u00d4\u00d5\u0001\u0000\u0000\u0000\u00d5\u00d7\u0001\u0000"+
		"\u0000\u0000\u00d6\u00d4\u0001\u0000\u0000\u0000\u00d7\u00d8\u0003#\u0011"+
		"\u0000\u00d8&\u0001\u0000\u0000\u0000\u00d9\u00da\u0003%\u0012\u0000\u00da"+
		"(\u0001\u0000\u0000\u0000\u00db\u00dc\t\u0000\u0000\u0000\u00dc\u00dd"+
		"\u0001\u0000\u0000\u0000\u00dd\u00de\u0006\u0014\u0000\u0000\u00de*\u0001"+
		"\u0000\u0000\u0000\u001a\u000027GNTZbfhov}\u0085\u008a\u0092\u009a\u00a2"+
		"\u00a8\u00ac\u00b4\u00b9\u00c4\u00c9\u00d2\u00d4\u0001\u0000\u0001\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}